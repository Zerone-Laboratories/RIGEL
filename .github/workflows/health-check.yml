name: Project Health Check

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  health-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.13.3'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libcairo2-dev \
          libgirepository1.0-dev \
          libgirepository-2.0-dev \
          libglib2.0-dev \
          pkg-config \
          python3-dev \
          libgtk-3-dev \
          gobject-introspection \
          gir1.2-glib-2.0 \
          pulseaudio \
          pulseaudio-utils \
          ffmpeg
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Validate project structure
      run: |
        echo "Project structure validation passed"
        echo "Core modules found:"
        ls -la core/
        echo "README.md exists and is readable"
        head -n 5 README.md
        
    - name: Test voice module imports
      run: |
        python -c "
        try:
            import whisper
            print('✓ Whisper import successful')
        except ImportError as e:
            print('✗ Whisper import failed:', e)
            
        try:
            import torch
            print('✓ PyTorch import successful')
        except ImportError as e:
            print('✗ PyTorch import failed:', e)
        "
        
    - name: Test core module imports
      run: |
        python -c "
        import sys
        sys.path.append('.')
        
        try:
            from core.logger import SysLog
            print('✓ Logger module import successful')
        except ImportError as e:
            print('✗ Logger module import failed:', e)
            
        try:
            from core.rigel import Rigel
            print('✓ Rigel core module import successful')
        except ImportError as e:
            print('✗ Rigel core module import failed:', e)
            
        try:
            from core.synth_n_recog import Synthesizer, Recognizer
            print('✓ Voice modules import successful')
        except ImportError as e:
            print('✗ Voice modules import failed:', e)
        "
